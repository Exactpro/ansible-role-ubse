- name: If state==pristine ...
  include_tasks: digitalocean-rebuild.yml
  when: state == 'pristine'


- name: If state==present ...
  include_tasks: digitalocean-build.yml
  when: state == 'present'
# debug: var=t1
- name: Fill 'vm' details
  loop:
    - {'k':'vm', 'v':"{{ vm|combine({'ip4':t1.data.ip_address, 'ip6':t1.data.ipv6_address|default(omit), 'droplet':t1.data.droplet}, recursive=True) }}"}
    - {'k':'ansible_host', 'v':'{{ t1.data.ip_address }}'}
    - {'k':'ansible_user', 'v':'root'}
    - {'k':'todo_port', 'v':'{{ ansible_port }}'}  # save target
    - {'k':'ansible_ssh_extra_args', 'v':'-o StrictHostKeyChecking=accept-new'} # need OpenSSH >= 7.6
  set_fact:
    "{{ item['k'] }}": "{{ item['v'] }}"

- name: If server is new/rebuilt, use default SSH port ...
  set_fact: ansible_port=22
  when: t1 is changed and ansible_port != 22

- name: Check port 22 is open
  wait_for:
    port: 22
    host: "{{ ansible_host }}"
    connect_timeout: 30
    timeout: 60  # "{{ wait_ssh }}"
  delegate_to: localhost
  ignore_errors: yes
  when: t1 is changed

- name: Confirm host connection works, 1st try
  ping:
  when: t1 is changed
  ignore_errors: yes
  register: ping0

- name: Confirm host connection works, 2nd try (the last one)
  ping:
  when: ping0 is failed

- name: Ensure desired SSH port
  include_tasks: ssh-port.yml
  when: todo_port != ansible_port
