- hosts: localhost
  connection: local
  vars_files:
    - vars.yml
  vars_prompt:
    - name: do_name
      prompt: "Name of server"
      private: no
  # - name: do_dns
  #   prompt: "DNS name to bind"
  #   private: no
  tasks:
    - name: Register SSH key
      digital_ocean: >
        state=present
        command=ssh
        name="{{ do_ssh_name }}"
        ssh_pub_key="{{ do_ssh_pub_key }}"
        api_token={{ do_api_token }}
      register: do_droplet

    - name: Find or create Droplet, then temp. register
      digital_ocean: >
        command=droplet
        state=present
        name={{ do_name }}
        region_id={{ do_region }}
        size_id={{ do_size }}
        image_id={{ do_image }}
        ssh_key_ids={{ do_droplet.ssh_key.id }}
        unique_name=yes
        private_networking=no
        api_token={{ do_api_token }}
      register: do_droplet

    # - name: Register DNS
    #   digital_ocean_domain: >
    #     state=present
    #     name="{{ do_dns }}"
    #     id="{{ do_droplet.droplet.id }}"
    #     api_token={{ do_api_token }}
    #   when: do_dns|length > 0

    - debug: msg="IP is {{ do_droplet.droplet.ip_address }}"

    - name: Add droplet to temp. inventory
      add_host: >
        name="{{ do_name }}"
        groups=dohosts
        ansible_python_interpreter=/usr/bin/python3 ## Ubuntu has neither 'python' nor 'python2' in this image!
        ansible_ssh_host="{{ do_droplet.droplet.ip_address }}"
        ansible_ssh_user=root
        ansible_ssh_private_key_file="{{ do_ssh_private_key }}"

    - name: Wait for SSH connection
      wait_for_connection:
        delay: 1
        timeout: 360

- hosts: dohosts

  vars_files:
    - defaults/main.yml
    - vars.yml

  tasks:
    - include: tasks/swap.yml
    - include: tasks/software.yml
    - include: tasks/security.yml
    - include: tasks/users.yml

  handlers:
    - include: handlers/site.yml
