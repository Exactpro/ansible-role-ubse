- hosts: DigitalOcean
 #connection: local
  gather_facts: False
  vars_files:
    - vars.yml
  tasks:
    - name: Ensure DO has SSH key '{{ do_ssh_name }}' registered
      digital_ocean: >
        state=present
        command=ssh
        name="{{ do_ssh_name }}"
        ssh_pub_key="{{ do_ssh_pub_key }}"
        api_token={{ do_api_token }}
      register: do_droplet

    - name: Find or create Droplet, then register in-memory
      digital_ocean: >
        command=droplet
        state=present
        name={{ do_name }}
        region_id={{ do_region }}
        size_id={{ do_size }}
        image_id={{ do_image }}
        ssh_key_ids={{ do_droplet.ssh_key.id }}
        unique_name=yes
        private_networking=no
        api_token={{ do_api_token }}
      register: do_droplet

  # - debug: var=do_droplet
    - debug: msg="Droplet {{ do_name }} {{ do_droplet.droplet.ip_address }}"

    - name: Add droplet to in-memory inventory
      add_host: >
        name="{{ do_name }}"
        groups=dohosts
        #ansible_python_interpreter=/usr/bin/python3 # this Ubuntu image has no 'python' or  'python2'!
        ansible_ssh_host="{{ do_droplet.droplet.ip_address }}"
        ansible_ssh_user=root
        ansible_ssh_private_key_file="{{ do_ssh_private_key }}"
        ansible_ssh_extra_args='-o StrictHostKeyChecking=no' # auto-add host key on 1st connection
      changed_when: false

    - name: Wait for SSH connection
      wait_for_connection:
        delay: 5
        timeout: 600 # default 600 seconds

- hosts: dohosts
  #TODO  ansible_ssh_extra_args='-o StrictHostKeyChecking=yes'
  vars_files:
    - defaults/main.yml
    - vars.yml

  tasks:
    - include: tasks/swap.yml
    - include: tasks/software.yml
    - include: tasks/security.yml
    - include: tasks/users.yml

  handlers:
    - include: handlers/site.yml
